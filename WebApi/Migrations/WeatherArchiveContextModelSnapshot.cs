// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebApi.Domain;

#nullable disable

namespace WebApi.Migrations
{
    [DbContext(typeof(WeatherArchiveContext))]
    partial class WeatherArchiveContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WeatherRecordWindDirection", b =>
                {
                    b.Property<DateTime>("WeatherRecordDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("WindDirectionsId")
                        .HasColumnType("integer");

                    b.HasKey("WeatherRecordDateTime", "WindDirectionsId");

                    b.HasIndex("WindDirectionsId");

                    b.ToTable("WeatherRecordWindDirection");
                });

            modelBuilder.Entity("WebApi.Domain.Models.WeatherActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name");

                    b.ToTable("WeatherActivities");
                });

            modelBuilder.Entity("WebApi.Domain.Models.WeatherRecord", b =>
                {
                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("AtmospherePressure")
                        .HasColumnType("integer");

                    b.Property<int?>("CloudBase")
                        .HasColumnType("integer");

                    b.Property<float>("DewPoint")
                        .HasColumnType("real");

                    b.Property<int?>("HorizontalVisibility")
                        .HasColumnType("integer");

                    b.Property<float>("Humidity")
                        .HasColumnType("real");

                    b.Property<int?>("Overcast")
                        .HasColumnType("integer");

                    b.Property<float>("Temperature")
                        .HasColumnType("real");

                    b.Property<int?>("WeatherActivityId")
                        .HasColumnType("integer");

                    b.Property<int?>("WindSpeed")
                        .HasColumnType("integer");

                    b.HasKey("DateTime");

                    b.HasIndex("WeatherActivityId");

                    b.ToTable("WeatherRecords");
                });

            modelBuilder.Entity("WebApi.Domain.Models.WindDirection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name");

                    b.ToTable("WindDirections");
                });

            modelBuilder.Entity("WeatherRecordWindDirection", b =>
                {
                    b.HasOne("WebApi.Domain.Models.WeatherRecord", null)
                        .WithMany()
                        .HasForeignKey("WeatherRecordDateTime")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Domain.Models.WindDirection", null)
                        .WithMany()
                        .HasForeignKey("WindDirectionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApi.Domain.Models.WeatherRecord", b =>
                {
                    b.HasOne("WebApi.Domain.Models.WeatherActivity", "WeatherActivity")
                        .WithMany()
                        .HasForeignKey("WeatherActivityId");

                    b.Navigation("WeatherActivity");
                });
#pragma warning restore 612, 618
        }
    }
}
